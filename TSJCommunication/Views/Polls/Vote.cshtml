
@{
    Layout = null;
    TSJCommunication.Models.Polls poll = ViewBag.Poll as TSJCommunication.Models.Polls;
    List<TSJCommunication.Models.Options> options = ViewBag.Options as List<TSJCommunication.Models.Options>;
    List<TSJCommunication.Models.Votes> votes = ViewBag.Votes as List<TSJCommunication.Models.Votes>;
    int userId = (int)ViewBag.UserId;
}
@if (!votes.Any(c => c.UserId == userId) && !User.IsInRole("admin"))
{
    <h4>VOTING</h4>
    <h2>@poll.Title</h2>
    <h3>@poll.Description</h3>

    using (Html.BeginForm())
    {
        if (poll.MultipleChoice)
        {
            foreach (var option in options)
            {
                <div>
                    @Html.Hidden("amountOfOptions", options.Count)
                    @Html.Hidden("pollId", poll.Id)
                    @Html.CheckBox("results", false)
                    <label for="results">@option.Value</label>
                </div>
            }
        }
        else
        {
            foreach (var option in options)
            {
                <div>
                    @Html.Hidden("amountOfOptions", options.Count)
                    @Html.Hidden("pollId", poll.Id)
                    @Html.RadioButton("radioResults", option.Id)
                    @Html.Hidden("results", false)
                    <label for="results">@option.Value</label>
                </div>
            }
        }

        <input type="submit" value="Проголосовать" />
    }
}
else
{
    <h4>RESULTS OF VOTING</h4>
    <h2>@poll.Title</h2>
    <h3>@poll.Description</h3>

    if (votes.Count != 0)
    {
        for (int i = 0; i < options.Count; i++)
        {
        <div>
            @options[i].Value - <b>@(Math.Round((double)(votes.Where(c => c.OptionId == options[i].Id).Count() * 100 / (double)votes.Count), 2))%</b> @votes.Where(c => c.OptionId == options[i].Id).Count() голоса(ов)
        </div>
        }
    }
    else
    {
        <div>
            Никто пока не проголосовал.
        </div>
    }
}
<br/>
<a href="/Polls">return to Polls</a>